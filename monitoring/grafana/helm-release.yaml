---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 6.6.2
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  values:
    # image:
    #   repository: grafana/grafana
    #   tag: 7.0.4
    deploymentStrategy:
      type: Recreate
    podAnnotations:
      backup.velero.io/backup-volumes: storage
      configmap.reloader.stakater.com/reload: "grafana"
    persistence:
      enabled: true
      storageClassName: "local-path"
      size: 10Gi
      accessModes:
        - ReadWriteOnce
    env:
      GF_EXPLORE_ENABLED: true
      GF_DISABLE_SANITIZE_HTML: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: "nginx"
        nginx.ingress.kubernetes.io/enable-global-auth: "false"
      hosts: [grafana.hacksm.net]
      tls:
        - hosts:
            - grafana.hacksm.net
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - grafana-clock-panel
      - vonage-status-panel
      - grafana-worldmap-panel
    serviceMonitor:
      enabled: true
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/default
    dashboards:
      default:
        1-node-exporter:
          url: https://grafana.com/api/dashboards/11074/revisions/9/download
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/v0.7.6/manifests/monitoring/grafana/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/v0.7.6/manifests/monitoring/grafana/dashboards/control-plane.json
          datasource: Prometheus
        minio-overview:
          url: https://raw.githubusercontent.com/krangence/hacksm/master/monitoring/grafana/dashboards/minio_overview.json
          datasource: Prometheus
        nginx-dashboard:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        node-exporter-full:
          url: https://raw.githubusercontent.com/krangence/hacksm/master/monitoring/grafana/dashboards/node_exporter_full.json
          datasource: Prometheus
        prometheus-exporter-summary:
          url: https://raw.githubusercontent.com/krangence/hacksm/master/monitoring/grafana/dashboards/prometheus_exporter_summary.json
          datasource: Prometheus
        velero:
          url: https://grafana.com/api/dashboards/11055/revisions/2/download
          datasource: Prometheus
    sidecar:
      datasources:
        enabled: true
        searchNamespace: ALL
        # defaultDatasourceEnabled: false
      dashboards:
        enabled: true
        searchNamespace: ALL
    datasources:
      datasources.yaml:
        apiVersion: 1
        # list of datasources that should be deleted from the database
        deleteDatasources:
          - name: Loki
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query-http:10902/
            isDefault: true
          #- name: loki
          #  type: loki
          #  access: proxy
          #  url: http://loki.logs.svc.cluster.local:3100
    grafana.ini:
      server:
        root_url: "https://grafana.hacksm.net"
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: false
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      auth.basic:
        disable_login_form: true
  valuesFrom:
    - kind: Secret
      name: "grafana-helm-values"
